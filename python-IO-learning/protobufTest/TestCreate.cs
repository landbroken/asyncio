// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: testCreate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ostar.Protobuf.USV2Sever.Admin {

  /// <summary>Holder for reflection information generated from testCreate.proto</summary>
  public static partial class TestCreateReflection {

    #region Descriptor
    /// <summary>File descriptor for testCreate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TestCreateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChB0ZXN0Q3JlYXRlLnByb3RvEglVU1YyU2V2ZXIijwEKBUFkbWluEgsKA0Nt",
            "ZBgBIAEoCRIJCgFVGAIgASgJEgkKAVAYAyABKAkSJAoFbmV3VXMYBCADKAsy",
            "FS5VU1YyU2V2ZXIuQWRtaW4uVXNlcho9CgRVc2VyEgkKAU4YASABKAkSCQoB",
            "UBgCIAEoCRINCgVMZXZlbBgDIAEoBRIQCghVU1ZzbmFtZRgEIAMoCUIhqgIe",
            "T3N0YXIuUHJvdG9idWYuVVNWMlNldmVyLkFkbWluYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ostar.Protobuf.USV2Sever.Admin.Admin), global::Ostar.Protobuf.USV2Sever.Admin.Admin.Parser, new[]{ "Cmd", "U", "P", "NewUs" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ostar.Protobuf.USV2Sever.Admin.Admin.Types.User), global::Ostar.Protobuf.USV2Sever.Admin.Admin.Types.User.Parser, new[]{ "N", "P", "Level", "USVsname" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [START messages]
  /// </summary>
  public sealed partial class Admin : pb::IMessage<Admin> {
    private static readonly pb::MessageParser<Admin> _parser = new pb::MessageParser<Admin>(() => new Admin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Admin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ostar.Protobuf.USV2Sever.Admin.TestCreateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Admin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Admin(Admin other) : this() {
      cmd_ = other.cmd_;
      u_ = other.u_;
      p_ = other.p_;
      newUs_ = other.newUs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Admin Clone() {
      return new Admin(this);
    }

    /// <summary>Field number for the "Cmd" field.</summary>
    public const int CmdFieldNumber = 1;
    private string cmd_ = "";
    /// <summary>
    /// what command will do
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cmd {
      get { return cmd_; }
      set {
        cmd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "U" field.</summary>
    public const int UFieldNumber = 2;
    private string u_ = "";
    /// <summary>
    /// administor's username
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string U {
      get { return u_; }
      set {
        u_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "P" field.</summary>
    public const int PFieldNumber = 3;
    private string p_ = "";
    /// <summary>
    /// administor's password
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string P {
      get { return p_; }
      set {
        p_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "newUs" field.</summary>
    public const int NewUsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Ostar.Protobuf.USV2Sever.Admin.Admin.Types.User> _repeated_newUs_codec
        = pb::FieldCodec.ForMessage(34, global::Ostar.Protobuf.USV2Sever.Admin.Admin.Types.User.Parser);
    private readonly pbc::RepeatedField<global::Ostar.Protobuf.USV2Sever.Admin.Admin.Types.User> newUs_ = new pbc::RepeatedField<global::Ostar.Protobuf.USV2Sever.Admin.Admin.Types.User>();
    /// <summary>
    /// new users array
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ostar.Protobuf.USV2Sever.Admin.Admin.Types.User> NewUs {
      get { return newUs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Admin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Admin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cmd != other.Cmd) return false;
      if (U != other.U) return false;
      if (P != other.P) return false;
      if(!newUs_.Equals(other.newUs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cmd.Length != 0) hash ^= Cmd.GetHashCode();
      if (U.Length != 0) hash ^= U.GetHashCode();
      if (P.Length != 0) hash ^= P.GetHashCode();
      hash ^= newUs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cmd.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cmd);
      }
      if (U.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(U);
      }
      if (P.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(P);
      }
      newUs_.WriteTo(output, _repeated_newUs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cmd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cmd);
      }
      if (U.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(U);
      }
      if (P.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(P);
      }
      size += newUs_.CalculateSize(_repeated_newUs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Admin other) {
      if (other == null) {
        return;
      }
      if (other.Cmd.Length != 0) {
        Cmd = other.Cmd;
      }
      if (other.U.Length != 0) {
        U = other.U;
      }
      if (other.P.Length != 0) {
        P = other.P;
      }
      newUs_.Add(other.newUs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Cmd = input.ReadString();
            break;
          }
          case 18: {
            U = input.ReadString();
            break;
          }
          case 26: {
            P = input.ReadString();
            break;
          }
          case 34: {
            newUs_.AddEntriesFrom(input, _repeated_newUs_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Admin message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class User : pb::IMessage<User> {
        private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<User> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ostar.Protobuf.USV2Sever.Admin.Admin.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User(User other) : this() {
          n_ = other.n_;
          p_ = other.p_;
          level_ = other.level_;
          uSVsname_ = other.uSVsname_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User Clone() {
          return new User(this);
        }

        /// <summary>Field number for the "N" field.</summary>
        public const int NFieldNumber = 1;
        private string n_ = "";
        /// <summary>
        ///new user's username
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string N {
          get { return n_; }
          set {
            n_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "P" field.</summary>
        public const int PFieldNumber = 2;
        private string p_ = "";
        /// <summary>
        ///new user's password
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string P {
          get { return p_; }
          set {
            p_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Level" field.</summary>
        public const int LevelFieldNumber = 3;
        private int level_;
        /// <summary>
        ///new user's level
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Level {
          get { return level_; }
          set {
            level_ = value;
          }
        }

        /// <summary>Field number for the "USVsname" field.</summary>
        public const int USVsnameFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _repeated_uSVsname_codec
            = pb::FieldCodec.ForString(34);
        private readonly pbc::RepeatedField<string> uSVsname_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// USVs array, which belong to the new user
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> USVsname {
          get { return uSVsname_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as User);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(User other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (N != other.N) return false;
          if (P != other.P) return false;
          if (Level != other.Level) return false;
          if(!uSVsname_.Equals(other.uSVsname_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (N.Length != 0) hash ^= N.GetHashCode();
          if (P.Length != 0) hash ^= P.GetHashCode();
          if (Level != 0) hash ^= Level.GetHashCode();
          hash ^= uSVsname_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (N.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(N);
          }
          if (P.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(P);
          }
          if (Level != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Level);
          }
          uSVsname_.WriteTo(output, _repeated_uSVsname_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (N.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(N);
          }
          if (P.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(P);
          }
          if (Level != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
          }
          size += uSVsname_.CalculateSize(_repeated_uSVsname_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(User other) {
          if (other == null) {
            return;
          }
          if (other.N.Length != 0) {
            N = other.N;
          }
          if (other.P.Length != 0) {
            P = other.P;
          }
          if (other.Level != 0) {
            Level = other.Level;
          }
          uSVsname_.Add(other.uSVsname_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                N = input.ReadString();
                break;
              }
              case 18: {
                P = input.ReadString();
                break;
              }
              case 24: {
                Level = input.ReadInt32();
                break;
              }
              case 34: {
                uSVsname_.AddEntriesFrom(input, _repeated_uSVsname_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
